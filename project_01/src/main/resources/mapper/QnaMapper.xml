<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 상품문의 테이블 -->
<mapper namespace="com.example.store.model.product.qna.dao.QnaDAO">

	<!-- 상품문의 등록 -->
	<insert id="insert" 
		parameterType="com.example.store.model.product.qna.dto.QnaDTO">
		insert into qna
		(qna_type, qna_title, qna_question, qna_secret, qna_member, qna_product)
		values 
			(#{qna_type},#{qna_title},#{qna_question},#{qna_secret},#{qna_member},#{qna_product})			
	</insert>
	
	<!-- 특정 상품에 맞는 상품문의 가져오기 -->
	<select id="selectQnaByProduct" 
		resultType="com.example.store.model.product.qna.dto.QnaDTO">
		SELECT @rownum:=@rownum-1 as rownum,q.*
		from qna AS q,
			(SELECT @rownum:=(SELECT COUNT(*) 
			FROM qna WHERE qna_product = #{qna_product})-#{start}+1) tmp
		where qna_product = #{qna_product}
		order by q.qna_idx desc
		limit #{start}, #{length}
	</select>
	
	<!-- 특정 상품에 맞는 상품문의 개수 가져오기 -->
	<select id="countByProduct" resultType="int">
		select count(*) 
		from qna
		where qna_product = #{qna_product}
	</select>
	
	<!-- 특정 조건에 맞는 상품문의 가져오기 -->
	<select id="selectQna" resultType="com.example.store.model.product.qna.dto.QnaDTO"
		parameterType = "com.example.store.model.product.qna.dto.SearchQnaDTO">
		SELECT @rownum:=@rownum-1 as rownum, q.*
		from qna AS q,
			(SELECT @rownum:=(SELECT COUNT(*) 
			FROM qna 
			where qna_member like #{searchQnaDto.qna_member}
			<if test="searchQnaDto.is_answer == 2">
			and qna_answer is null
			</if>
			<if test="searchQnaDto.is_answer == 3">
			and qna_answer is not null
			</if>
			)-#{start}+1) tmp
		where q.qna_member like #{searchQnaDto.qna_member}
		<if test="searchQnaDto.is_answer == 2">
			and q.qna_answer is null
		</if>
		<if test="searchQnaDto.is_answer == 3">
			and q.qna_answer is not null
		</if>
		order by q.qna_idx desc
		limit #{start}, #{length}
	</select>
	
	<!-- 특정 조건에 맞는 상품문의 개수 가져오기 -->
	<select id="countQna" resultType="int" 
		parameterType="com.example.store.model.product.qna.dto.SearchQnaDTO">
		select count(*) 
		from qna
		where qna_member like #{qna_member}
		<if test="is_answer == 2">
			and qna_answer is null
		</if>
		<if test="is_answer == 3">
			and qna_answer is not null
		</if>
		<if test="qna_product != 0">
			and qna_product = #{qna_product}
		</if>
	</select>
	
	<!-- 상품문의(한개) 가져오기 -->
	<select id="selectOne" parameterType="com.example.store.model.product.qna.dto.SearchQnaDTO"
		resultType="com.example.store.model.product.qna.dto.QnaDTO">
		SELECT * 
		from qna
		where qna_idx = #{qna_idx}
	</select>
	
	<!-- 상품문의 수정 -->
	<update id="updateAnswer">
		update qna
		set qna_answer = #{qna_answer}
		where qna_idx = #{qna_idx}
	</update>
	
	<!-- 상품문의 삭제 -->
	<delete id="deleteOne">
		delete 
		from qna
		where qna_idx = #{qna_idx}
	</delete>
</mapper>