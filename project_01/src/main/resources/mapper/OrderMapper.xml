<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 주문 테이블 -->
<mapper
	namespace="com.example.project_01.model.order.dao.OrderDAO">
	<!-- 주문정보 삽입 -->
	<insert id="insertOrder">
		insert into order_
		(mem_id, mem_name, order_postcode, order_addr1, order_addr2, order_phone,
			product_idx, size, count, pay, order_code, merchant_uid)
		values (#{mem_id}, #{mem_name}, #{order_postcode}, #{order_addr1}, #{order_addr2}, #{order_phone},
				#{product_idx}, #{size}, #{count}, #{pay}, #{order_code}, #{merchant_uid})
	</insert>
	
	<!-- 사용자 아이디로 주문내역 조회 -->
	<select id="selectById" resultType ="com.example.project_01.model.order.dto.OrderDTO">
		SELECT o.*,p.*
		FROM order_ AS o
		JOIN product AS p
		ON o.product_idx = p.product_idx
		where mem_id = #{mem_id} and (order_date >= #{startDate} AND order_date &lt; #{endDate})
		order by order_date desc
	</select>
	
	<!-- 주문코드로 주문내역 조회 -->
	<select id="selectByCode" resultType ="com.example.project_01.model.order.dto.OrderDTO">
		select o.*, p.product_name 
		from order_ as o
		JOIN product AS p
		ON o.product_idx = p.product_idx
		where order_code = #{order_code}
	</select>
	
	<!-- 주문코드에 해당하는 주문 내역 삭제 -->
	<delete id="deleteByCode">
		delete from order_
		where order_code = #{order_code}
	</delete>
	
	<!-- 조건에 맞는 주문의 개수 조회 -->
	<select id="countOrder" resultType="int">
		select count(*) 
		from order_
		where order_date >= #{fromDate} and order_date &lt;= CONCAT(#{toDate},"23-59-59")
		<if test="searchType.equals('주문번호')">
			and order_code like #{searchWord}
		</if>
		<if test="searchType.equals('아이디')">
			and mem_id like #{searchWord}
		</if>
			and order_state like #{order_state}
	</select>
	
	<!-- 조건에 맞는 주문 검색 -->
	<select id="selectOrder" resultType="com.example.project_01.model.order.dto.OrderDTO">
		select o.*, p.*
		from order_ as o
		JOIN product AS p
		ON o.product_idx = p.product_idx
		where order_date >= #{searchOrderDto.fromDate} and 
			order_date &lt;= CONCAT(#{searchOrderDto.toDate},"23-59-59")
		<if test="searchOrderDto.searchType.equals('주문번호')">
			and order_code like #{searchOrderDto.searchWord}
		</if>
		<if test="searchOrderDto.searchType.equals('아이디')">
			and mem_id like #{searchOrderDto.searchWord}
		</if>
			and order_state like #{searchOrderDto.order_state}
		order by order_date desc
		limit #{start}, #{size}
	</select>
	
	<!-- 주문 상태 변경 -->
	<update id="updateState">
		update order_
		set order_state = #{order_state}
		where order_code = #{order_code}
	</update>
	
	<!-- merchant_uid 에 맞는 주문내역 조회 -->
	<select id="selectByMerchantUid" resultType = "com.example.project_01.model.order.dto.OrderDTO">
		select * from order_
		where merchant_uid = #{merchant_uid}
	</select>
</mapper>